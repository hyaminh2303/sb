wb.add_worksheet(name: t('views.campaign_reports.workbook.by_location.title')) do |sheet|

  sheet.column_widths nil, nil, nil, nil, 10

  r = [
      campaign.name, '', '', '', '', '',
      t('views.campaign_reports.workbook.fields.start_date'),
      t('views.campaign_reports.workbook.fields.end_date'),
      campaign.pricing_model,
      t('views.campaign_reports.workbook.fields.media_budget')
  ]
  sheet.add_row r, style: [
                     @title, @title, @title, @title, @title, nil,
                     @title_with_border,
                     @title_with_border,
                     @title_with_border,
                     @title_with_border
                 ]
  sheet.merge_cells 'A1:E1' # Campaign Title
  #sheet.merge_cells 'J1:K1' # Campaign CPM
  #sheet.merge_cells 'L1:M1' # Campaign total budget

  r = [
      t('views.campaign_details.fields.number'),
      t('views.campaign_details.fields.location'),
      t('views.campaign_details.fields.views'),
      t('views.campaign_details.fields.clicks'),
      t('views.campaign_details.fields.ctr'),
      '',
      campaign.start_time.strftime(Date::DATE_FORMATS[:iso]),
      campaign.end_time.strftime(Date::DATE_FORMATS[:iso]),
      get_unit_price(campaign, :local).format,
      get_budget(campaign, :local).format
  ]
  s = [ @head,
        @head,
        @head,
        @head,
        @head,
        nil,
        @border,
        @border,
        @border,
        @border]
  sheet.add_row r, style: s

  cell = Reports::Helpers::AdminFormula.new 3, views: 'C', clicks: 'D'

  cell.chart_from = cell.row

  data.each do |d|
    sheet.add_row [
                      cell.row - 2,
                      d.location_name,
                      d.views,
                      d.clicks,
                      cell.ctr,
                  ], style: [ @center, nil, @number, @number, @percent]

    cell.current_row_to_sum_list
    cell.next
  end

  cell.chart_to = cell.row

  sheet.add_row [
                    '',
                    t('views.campaign_details.fields.grand_total'),
                    cell.sum_for_grand(:views),
                    cell.sum_for_grand(:clicks),
                    cell.ctr
                ], style: [ @head, @head, @head_number, @head_number, @head_percent]

  cell.next

  # Add hidden rows for create chart
  cell.next

  # Create chart
  sheet.add_chart(Axlsx::Bar3DChart, :title => 'Views', :start_at => "A#{cell.row}", :end_at => "H#{cell.row + 15}", :bar_dir => :col, :show_legend => false) do |chart|
    chart.add_series :data => sheet["C#{cell.chart_from}:C#{cell.chart_to - 1}"],
                     :labels => sheet["B#{cell.chart_from}:B#{cell.chart_to - 1}"],
                     :colors => (cell.chart_from...cell.chart_to).map { "4F81BD"}
    chart.valAxis.gridlines = true
    chart.catAxis.gridlines = false
  end

  sheet.add_chart(Axlsx::Bar3DChart, :title => 'Clicks', :start_at => "H#{cell.row}", :end_at => "M#{cell.row + 15}", :bar_dir => :col, :show_legend => false) do |chart|
    chart.add_series :data => sheet["D#{cell.chart_from}:D#{cell.chart_to - 1}"],
                     :labels => sheet["B#{cell.chart_from}:B#{cell.chart_to - 1}"],
                     :colors => (cell.chart_from...cell.chart_to).map { "4F81BD"}
    chart.valAxis.gridlines = true
    chart.catAxis.gridlines = false
  end
end
